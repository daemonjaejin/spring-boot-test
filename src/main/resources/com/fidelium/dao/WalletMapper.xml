<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fidelium.dao.WalletMapper">

    <insert id="insertCoinInfo" parameterType="com.fidelium.domain.CoinInfo">
        insert into coin_info (
          id
          , type
          , public_key
          , private_key
          , address
         )
        values (
          #{id,jdbcType=VARCHAR}
          , #{type,jdbcType=VARCHAR}
          , #{publicKey,jdbcType=VARCHAR}
          , #{privateKey,jdbcType=VARCHAR}
          , #{address,jdbcType=VARCHAR}
          )
    </insert>

    <insert id="insertUserCoin" parameterType="com.fidelium.domain.UserCoin">
        insert into user_coin (
          id
          , type
          , coin
          , qr_path
         )
        values (
          #{id,jdbcType=VARCHAR}
          , #{type,jdbcType=VARCHAR}
          , #{coin,jdbcType=VARCHAR}
          , #{qrPath,jdbcType=VARCHAR}
          )
    </insert>

    <update id="updateUserCoin" parameterType="com.fidelium.domain.UserCoin">
        INSERT INTO user_coin(
          coin
          , qr_path
          , type
          , id
        )
        VALUES (
          #{coin}
          , #{qrPath}
          , #{type}
          , #{id}
        )
        ON DUPLICATE KEY
        UPDATE
          coin = #{coin}
          , qr_path = #{qrPath}
          , type = #{type}
          , id = #{id}
    </update>

    <sql id="tradeHistory_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Nov 07 16:47:44 KST 2017.
        -->
        id, type, trade_datetime, trade_type, sell_buy_type, amount, price, rate, dollar_rate,
        view_yn, upd_datetime, status
        , 'success' as title
        , '성공' as contents
    </sql>

    <select id="selectTradeList" parameterType="com.fidelium.domain.TradeHistory" resultType="com.fidelium.domain.TradeHistory" >
        select
        <if test="isCount">
            COUNT(*) AS total_num
        </if>
        <if test="!isCount">
            *
        </if>
        from trade_history
        <where>
            AND id = #{id,jdbcType=VARCHAR}
            AND type = #{type, jdbcType=VARCHAR}
            AND view_yn = 'Y'
            <if test="startDatetime != null and startDatetime != '' and endDatetime != null and endDatetime != '' ">
                trade_datetime <![CDATA[ > ]]> #{startDatetime} AND trade_datetime <![CDATA[ < ]]> #{endDatetime}
            </if>
        </where>
        <if test="!isCount">
          LIMIT #{firstNum}, #{lastNum}
        </if>
    </select>

    <select id="selectTradeInfo" parameterType="com.fidelium.domain.TradeHistory" resultType="com.fidelium.domain.TradeHistory">
        select
        <include refid="tradeHistory_Column_List" />
        from trade_history
        where id = #{id,jdbcType=VARCHAR}
        and type = #{type,jdbcType=VARCHAR}
        and trade_datetime = #{tradeDatetime}
        AND view_yn = 'Y'
    </select>


    <select id="selectUserTradeList" parameterType="com.fidelium.domain.UserTradeHistory" resultType="com.fidelium.domain.UserTradeHistory">
        SELECT
          *
        FROM user_trade_history
        where id = #{id,jdbcType=VARCHAR}
        and type = #{type,jdbcType=VARCHAR}
        and user_trade_datetime = #{userTradeDatetime}
        AND kind = #{kind}
        AND view_yn = 'Y'
        <if test="startDatetime != null and startDatetime != '' and endDatetime != null and endDatetime != '' ">
            user_trade_datetime <![CDATA[ > ]]> #{startDatetime} AND user_trade_datetime <![CDATA[ < ]]> #{endDatetime}
        </if>
        <if test="!isCount">
          LIMIT #{firstNum}, #{lastNum}
        </if>
    </select>

    <update id="updateRateInfo" parameterType="com.fidelium.domain.RateInfo">
        UPDATE rate_info
        <set>
          send_rate = #{sendRate}
          , trade_rate = #{tradeRate}
        </set>
          , upd_id = #{updId}
          , upd_datetime = NOW()
        <where>
            AND key_value = #{keyValue}
        </where>
    </update>

    <select id="selectRateInfo" parameterType="com.fidelium.domain.RateInfo" resultType="com.fidelium.domain.RateInfo">
        SELECT
          *
        FROM rate_info
        WHERE key_value = #{keyValue}
    </select>

    <select id="coinInfoList" parameterType="com.fidelium.domain.CoinInfo" resultType="com.fidelium.domain.CoinInfo">
        SELECT
        <if test="isCount">
            COUNT(*) AS total_num
        </if>
        <if test="!isCount">
            *
        </if>
        FROM coin_info
        <if test="!isCount">
          LIMIT #{firstNum}, #{lastNum}
        </if>
    </select>

    <select id="getUserTradeList" parameterType="com.fidelium.domain.UserTradeHistory" resultType="com.fidelium.domain.UserTradeHistory">
        SELECT
        <if test="isCount">
            COUNT(*) AS total_num
        </if>
        <if test="!isCount">
            *
        </if>
        FROM user_trade_history
        <where>
            AND view_yn = 'Y'
        </where>
        <if test="!isCount">
          LIMIT #{firstNum}, #{lastNum}
        </if>
    </select>

    <select id="getTradeList" parameterType="com.fidelium.domain.TradeHistory" resultType="com.fidelium.domain.TradeHistory" >
        select
        <if test="isCount">
            COUNT(*) AS total_num
        </if>
        <if test="!isCount">
            *
        </if>
        from trade_history
        <where>
            AND view_yn = 'Y'
        </where>
        <if test="!isCount">
          LIMIT #{firstNum}, #{lastNum}
        </if>
    </select>

    <update id="updateCoinInfoRep" parameterType="com.fidelium.domain.UserCoin">
        UPDATE user_coin
        <set>
            rep_yn = #{repYn}
        </set>
        <where>
            AND id = #{id}
            <if test="isRep">
                AND type = #{type}
            </if>
            <if test="!isRep">
                AND type != #{type}
            </if>
        </where>
    </update>

    <update id="updateCoinInfo" parameterType="com.fidelium.domain.UserCoin">
        UPDATE user_coin
        <set>
            coin = #{coin}
        </set>
        <where>
            AND id = #{id}
            AND type = #{type}
        </where>
    </update>
    
</mapper>
